[build-system]
requires = ["setuptools>=64.0"]
build-backend = "setuptools.build_meta"

[project]
name = "learning-litestar"
version = "0.1.0"
description = "Learning litestar."
license = { text = "All Rights Reserved" }
readme = "README.md"
requires-python = ">=3.12,<4.0"
authors = [
  {name = "Tony Narlock", email = "tony@git-pull.com"}
]
dependencies = [
    "litestar[standard]>=2.14.0",
    "strawberry-graphql[debug-server]>=0.258.0",
]

[tool.setuptools.package-dir]
"" = "src"

[tool.setuptools.packages.find]
where = ["src"]
include = ["app*"]

[dependency-groups]
dev = [
  ### Testing ###
  "pytest",
  "pytest-rerunfailures",
  "pytest-watcher",
  # Lint
  "ruff",
  "mypy",
  "typing-extensions",
]

[tool.mypy]
strict = true
python_version = "3.12"
files = [
  "src/",
]

[tool.ruff]
target-version = "py312"

[tool.ruff.lint]
select = [
  "E", # pycodestyle
  "F", # pyflakes
  "I", # isort
  "UP", # pyupgrade
  "A", # flake8-builtins
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "COM", # flake8-commas
  "EM", # flake8-errmsg
  "Q", # flake8-quotes
  "PTH", # flake8-use-pathlib
  "SIM", # flake8-simplify
  "TRY", # Trycertatops
  "PERF", # Perflint
  "RUF", # Ruff-specific rules
  "D", # pydocstyle
]
ignore = [
  "COM812", # missing trailing comma, ruff format conflict
]

[tool.ruff.lint.isort]
known-first-party = [
  "src",
  "doctest_document",
  "docutils_compat",
  "gp_libs",
  "linkify_issues",
  "pytest_doctest_docutils",
]
combine-as-imports = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = ["F401"]
"tests/**/test_*.py" = ["S101"]

[tool.pytest.ini_options]
addopts = "--tb=short --no-header --showlocals --doctest-modules"
doctest_optionflags = "ELLIPSIS NORMALIZE_WHITESPACE"
testpaths = [
  "src",
  "tests",
]

[tool.pytest-watcher]
now = true
ignore_patterns = ["*.py.*.py"]
